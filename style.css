// Initialize AOS (Animate on Scroll)
AOS.init({ 
    duration: 1000, 
    once: true,
    disable: window.innerWidth < 768 // Disable on mobile for better performance
});

// Header Scroll Effect
window.addEventListener('scroll', function() {
    const header = document.querySelector('header');
    if (window.scrollY > 50) {
        header.classList.add('scrolled');
    } else {
        header.classList.remove('scrolled');
    }
});

// Hero Background Slideshow
document.addEventListener('DOMContentLoaded', function() {
    const heroBackgrounds = document.querySelectorAll('.hero-bg');
    let currentBg = 0;
    
    // Hide all backgrounds except first
    heroBackgrounds.forEach((bg, index) => {
        if (index === 0) {
            bg.style.opacity = '1';
        } else {
            bg.style.opacity = '0';
        }
    });
    
    // Function to change background
    function changeBackground() {
        // Fade out current background
        heroBackgrounds[currentBg].style.opacity = '0';
        
        // Update current background index
        currentBg = (currentBg + 1) % heroBackgrounds.length;
        
        // Fade in new background
        heroBackgrounds[currentBg].style.opacity = '1';
    }
    
    // Change background every 6 seconds
    setInterval(changeBackground, 6000);
});

// Mobile Navigation
const hamburger = document.getElementById('hamburger');
const mobileNav = document.getElementById('mobile-nav');

if (hamburger && mobileNav) {
    hamburger.addEventListener('click', function() {
        hamburger.classList.toggle('active');
        mobileNav.classList.toggle('active');
        document.body.classList.toggle('menu-open');
    });

    // Close mobile menu when clicking a link
    const mobileNavLinks = mobileNav.getElementsByTagName('a');
    Array.from(mobileNavLinks).forEach(link => {
        link.addEventListener('click', function() {
            hamburger.classList.remove('active');
            mobileNav.classList.remove('active');
            document.body.classList.remove('menu-open');
        });
    });

    // Close mobile menu when clicking outside
    document.addEventListener('click', function(e) {
        if (!hamburger.contains(e.target) && 
            !mobileNav.contains(e.target) && 
            mobileNav.classList.contains('active')) {
            hamburger.classList.remove('active');
            mobileNav.classList.remove('active');
            document.body.classList.remove('menu-open');
        }
    });
}

// Smooth Scroll for Anchor Links
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function(e) {
        e.preventDefault();
        const targetId = this.getAttribute('href');
        if (targetId === '#') return;
        
        const targetElement = document.querySelector(targetId);
        if (targetElement) {
            const headerHeight = document.querySelector('header').offsetHeight;
            const targetPosition = targetElement.offsetTop - headerHeight;
            
            window.scrollTo({
                top: targetPosition,
                behavior: 'smooth'
            });
        }
    });
});

// Simple Parallax Effect for Section Images
window.addEventListener('scroll', function() {
    const images = document.querySelectorAll('.section-wrapper img');
    images.forEach(img => {
        const speed = 0.3;
        const rect = img.getBoundingClientRect();
        if (rect.top < window.innerHeight && rect.bottom > 0) {
            const scroll = window.pageYOffset;
            const distance = (rect.top + scroll) * speed;
            img.style.transform = `translateY(${distance}px)`;
        }
    });
});

// Intersection Observer for Fade-In Effects
const observerOptions = {
    threshold: 0.2,
    rootMargin: '0px 0px -50px 0px'
};

const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry.target.classList.add('in-view');
            observer.unobserve(entry.target);
        }
    });
}, observerOptions);

// Observe elements that should fade in
document.querySelectorAll('.section-wrapper').forEach(section => {
    observer.observe(section);
});

// Handle Loading State
window.addEventListener('load', function() {
    document.body.classList.add('loaded');
});

// Initialize Particles.js if the element exists
if (document.getElementById('particles-js')) {
    particlesJS('particles-js', {
        particles: {
            number: {
                value: window.innerWidth < 768 ? 40 : 80,
                density: {
                    enable: true,
                    value_area: 800
                }
            },
            color: { value: "#ffffff" },
            shape: { type: "circle" },
            opacity: {
                value: 0.3,
                random: false
            },
            size: {
                value: 3,
                random: true
            },
            line_linked: {
                enable: true,
                distance: 150,
                color: "#ffffff",
                opacity: 0.2,
                width: 1
            },
            move: {
                enable: true,
                speed: window.innerWidth < 768 ? 2 : 3,
                direction: "none",
                random: false,
                straight: false,
                out_mode: "out",
                bounce: false
            }
        },
        interactivity: {
            detect_on: "canvas",
            events: {
                onhover: {
                    enable: window.innerWidth > 768,
                    mode: "repulse"
                },
                onclick: {
                    enable: true,
                    mode: "push"
                },
                resize: true
            }
        },
        retina_detect: true
    });
}
